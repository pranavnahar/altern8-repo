name: CI

# 1
on:
  # Uncomment the following lines to trigger the workflow on push to main
  # push:
  #     branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "Image version"
        required: true

# 2
env:
  REGISTRY: "registry.digitalocean.com/altern8-project-container"
  NEXTJS_IMAGE_NAME: "altern8-project-frontend-user"

# 3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - name: Checkout the repo
        uses: actions/checkout@v4

      # Build and tag Next.js app image
      - name: Build and push Next.js app image
        run: docker build -t $REGISTRY/$NEXTJS_IMAGE_NAME:${{ github.sha }} .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2.5.1
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      # Remove all old images except the latest 3
      - name: Remove old images except the latest 3
        run: |
          repo_exists=$(doctl registry repository list | grep "$NEXTJS_IMAGE_NAME" || true)
          if [ ! -z "$repo_exists" ]; then
            tags=$(doctl registry repository list-tags $NEXTJS_IMAGE_NAME --format Tag --limit 100 | tail -n +4)
            if [ ! -z "$tags" ]; then
              for tag in $tags; do
                doctl registry repository delete-manifest $NEXTJS_IMAGE_NAME $tag --force
              done
            fi
          else
            echo "No repository found"
          fi

      # Push Next.js app image to DigitalOcean Container Registry
      - name: Push Next.js app image
        run: docker push $REGISTRY/$NEXTJS_IMAGE_NAME:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to DigitalOcean droplet via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ""
          debug: true
          envs: NEXTJS_IMAGE_NAME,REGISTRY,${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com

            # Pull latest image
            docker pull $REGISTRY/$NEXTJS_IMAGE_NAME:${{ github.sha }}

            # Stop and remove old container
            docker stop $NEXTJS_IMAGE_NAME || true
            docker rm $NEXTJS_IMAGE_NAME || true

            # Run new container
            docker run -d \
            -p 3000:3000 \
            --restart always \
            --name $NEXTJS_IMAGE_NAME \
            $REGISTRY/$NEXTJS_IMAGE_NAME:${{ github.sha }}
